<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.kwanpham.springmybatisdemo.repository.EmployeeRepo">

    <!--    <resultMap id="BaseResultMap" type="com.ach.web.model.response.UserResponse">-->
    <!--        <id column="ID" property="id" jdbcType="BIGINT"/>-->
    <!--        <result column="USERNAME" property="username" jdbcType="VARCHAR"/>-->
    <!--        <result column="STATUS" property="status" jdbcType="VARCHAR"/>-->
    <!--        <result column="IS_RESET_PASSWORD" property="resetPassword" jdbcType="BOOLEAN"/>-->
    <!--        <result column="REG_DT" property="regDt" jdbcType="DATE"/>-->
    <!--        <result column="EXP_DT" property="expDt" jdbcType="DATE"/>-->
    <!--        <result column="ROLE_ID" property="roleId" jdbcType="INTEGER"/>-->
    <!--        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>-->
    <!--    </resultMap>-->


    <insert id="insert">
        <selectKey keyProperty="employeeId" resultType="long" order="BEFORE" statementType="PREPARED">
            SELECT seq_employee.nextVal FROM dual
        </selectKey>

        INSERT INTO employee (employee_id , name, phone, email, gender, status, content, create_date)
        VALUES (#{employeeId}, #{name}, #{phone}, #{email}, #{gender}, #{status},#{content}, #{createDate})
    </insert>

    <update id="update" parameterType="io.github.kwanpham.springmybatisdemo.model.Employee">
        update employee
        set name   = #{name},
            gender = #{gender},
            status = #{status}
        where employee_id = #{employee_id}
    </update>

    <delete id="deleteById">
        DELETE
        from employee
        WHERE employee_id = #{employee_id}
    </delete>

<!--    <select id="findAll" resultType="io.github.kwanpham.springmybatisdemo.model.Employee">-->
<!--        Select *-->
<!--        from employee-->
<!--    </select>-->

    <sql id="searchByEmployeeSearch">
        where 1 = 1
        <if test="prefixEmail != null">
            AND email like concat('%' , #{prefixEmail})
        </if>

        <if test="gender != null">
            AND gender = #{gender}
        </if>

        <if test="status != null">
            AND status like #{status}
        </if>
    </sql>

    <select id="findByEmployeeSearch" parameterType="io.github.kwanpham.springmybatisdemo.model.EmployeeSearch" resultType="io.github.kwanpham.springmybatisdemo.model.Employee">
        Select * from employee
        <include refid="searchByEmployeeSearch"></include>
    </select>

    <select id="countByEmployeeSearch" parameterType="io.github.kwanpham.springmybatisdemo.model.EmployeeSearch" resultType="long">
        Select count(*) from employee
        <include refid="searchByEmployeeSearch"></include>
    </select>

    <select id="findById" parameterType="long" resultType="io.github.kwanpham.springmybatisdemo.model.Employee">
        Select *
        from employee
        where employee_id = #{id}
    </select>


    <select id="findByIdForUpdate" parameterType="long" resultType="io.github.kwanpham.springmybatisdemo.model.Employee">
        Select *
        from employee
        where employee_id = #{id} for update
    </select>


</mapper>